$date
    Oct 14, 2023  11:06:25
$end
$version
    TOOL:	xmsim(64)	23.03-s004
$end
$timescale
    1 ns
$end

$scope module top $end
$var reg       1 !    clk $end
$var reg       1 "    rst_sync_n $end
$var reg       1 #    run_clock $end

$scope module if_fft_16_4_in $end
$var parameter 32 $    INPUT_WIDTH $end
$var wire      1 %    clk  $end
$var wire      1 &    rst_sync_n  $end
$var reg       1 '    i_valid $end
$var reg       8 (    i_data[0][0] [7:0] $end
$var reg       8 )    i_data[0][1] [7:0] $end
$var reg       8 *    i_data[1][0] [7:0] $end
$var reg       8 +    i_data[1][1] [7:0] $end
$var reg       8 ,    i_data[2][0] [7:0] $end
$var reg       8 -    i_data[2][1] [7:0] $end
$var reg       8 .    i_data[3][0] [7:0] $end
$var reg       8 /    i_data[3][1] [7:0] $end
$var reg       1 0    monstart $end
$var reg       1 1    drvstart $end
$var reg       1 2    got_packet $end
$var integer  32 3    frac_part $end
$var real     64 4    scale $end

$scope task send_to_dut $end
$var reg       8 5    data[0][0] [7:0] $end
$var reg       8 6    data[0][1] [7:0] $end
$var reg       8 7    data[1][0] [7:0] $end
$var reg       8 8    data[1][1] [7:0] $end
$var reg       8 9    data[2][0] [7:0] $end
$var reg       8 :    data[2][1] [7:0] $end
$var reg       8 ;    data[3][0] [7:0] $end
$var reg       8 <    data[3][1] [7:0] $end
$upscope $end


$scope task collect_packet $end
$var reg       8 =    data[0][0] [7:0] $end
$var reg       8 >    data[0][1] [7:0] $end
$var reg       8 ?    data[1][0] [7:0] $end
$var reg       8 @    data[1][1] [7:0] $end
$var reg       8 A    data[2][0] [7:0] $end
$var reg       8 B    data[2][1] [7:0] $end
$var reg       8 C    data[3][0] [7:0] $end
$var reg       8 D    data[3][1] [7:0] $end
$upscope $end

$upscope $end


$scope module if_fft_16_4_out $end
$var parameter 32 E    OUTPUT_WIDTH $end
$var wire      1 F    clk  $end
$var wire      1 G    rst_sync_n  $end
$var reg       1 H    o_valid $end
$var reg      12 I    o_data[0][0] [11:0] $end
$var reg      12 J    o_data[0][1] [11:0] $end
$var reg      12 K    o_data[1][0] [11:0] $end
$var reg      12 L    o_data[1][1] [11:0] $end
$var reg      12 M    o_data[2][0] [11:0] $end
$var reg      12 N    o_data[2][1] [11:0] $end
$var reg      12 O    o_data[3][0] [11:0] $end
$var reg      12 P    o_data[3][1] [11:0] $end
$var reg      12 Q    o_data[4][0] [11:0] $end
$var reg      12 R    o_data[4][1] [11:0] $end
$var reg      12 S    o_data[5][0] [11:0] $end
$var reg      12 T    o_data[5][1] [11:0] $end
$var reg      12 U    o_data[6][0] [11:0] $end
$var reg      12 V    o_data[6][1] [11:0] $end
$var reg      12 W    o_data[7][0] [11:0] $end
$var reg      12 X    o_data[7][1] [11:0] $end
$var reg      12 Y    o_data[8][0] [11:0] $end
$var reg      12 Z    o_data[8][1] [11:0] $end
$var reg      12 [    o_data[9][0] [11:0] $end
$var reg      12 \    o_data[9][1] [11:0] $end
$var reg      12 ]    o_data[10][0] [11:0] $end
$var reg      12 ^    o_data[10][1] [11:0] $end
$var reg      12 _    o_data[11][0] [11:0] $end
$var reg      12 `    o_data[11][1] [11:0] $end
$var reg      12 a    o_data[12][0] [11:0] $end
$var reg      12 b    o_data[12][1] [11:0] $end
$var reg      12 c    o_data[13][0] [11:0] $end
$var reg      12 d    o_data[13][1] [11:0] $end
$var reg      12 e    o_data[14][0] [11:0] $end
$var reg      12 f    o_data[14][1] [11:0] $end
$var reg      12 g    o_data[15][0] [11:0] $end
$var reg      12 h    o_data[15][1] [11:0] $end
$var reg       1 i    monstart $end
$var reg       1 j    drvstart $end
$var reg       1 k    got_packet $end
$upscope $end

$upscope $end


$scope module cdns_uvm_pkg $end
$var parameter 32 l    UVM_SET_VERBOSITY $end
$var parameter 32 m    UVM_GET_VERBOSITY $end
$var parameter 32 n    UVM_SET_ACTIONS $end
$var parameter 32 o    UVM_GET_ACTIONS $end
$var parameter 32 p    UVM_SET_STYLE $end
$var parameter 32 q    UVM_GET_STYLE $end
$var parameter 32 r    UVM_SET_SEVERITY $end
$var parameter 32 s    UVM_GET_SEVERITY $end
$var event     1 t    uvm_build_complete $end
$var reg       1 u    uvm_phase_is_start $end
$var reg       1 v    uvm_ml_mode $end
$var event     1 w    cdns_uvm_data_valid $end

$scope function uvm_cdns_report_server_setup $end
$var reg       1 x    uvm_cdns_report_server_setup $end
$var reg       1 y    enable $end
$upscope $end


$scope function cdns_tcl_uvm_message_hyperlinks $end
$var integer  32 z    status $end
$upscope $end

$upscope $end


$scope module cdns_assert2uvm_pkg $end
$var integer  32 {    verbosity $end
$upscope $end


$scope module uvm_pkg $end
$var parameter 32 |    UVM_HDL_MAX_WIDTH $end
$var parameter 328 }    uvm_mgc_copyright $end
$var parameter 336 ~    uvm_cdn_copyright $end
$var parameter 224 !!   uvm_snps_copyright $end
$var parameter 328 "!   uvm_cy_copyright $end
$var parameter 256 #!   uvm_nv_copyright $end
$var parameter 200 $!   uvm_revision $end
$var reg       1 %!   uvm_start_uvm_declarations $end
$var parameter 32 &!   UVM_STREAMBITS $end
$var parameter 32 '!   UVM_RADIX $end
$var parameter 32 (!   UVM_MACRO_NUMFLAGS $end
$var parameter 32 )!   UVM_DEFAULT $end
$var parameter 32 *!   UVM_ALL_ON $end
$var parameter 32 +!   UVM_FLAGS_ON $end
$var parameter 32 ,!   UVM_FLAGS_OFF $end
$var parameter 32 -!   UVM_COPY $end
$var parameter 32 .!   UVM_NOCOPY $end
$var parameter 32 /!   UVM_COMPARE $end
$var parameter 32 0!   UVM_NOCOMPARE $end
$var parameter 32 1!   UVM_PRINT $end
$var parameter 32 2!   UVM_NOPRINT $end
$var parameter 32 3!   UVM_RECORD $end
$var parameter 32 4!   UVM_NORECORD $end
$var parameter 32 5!   UVM_PACK $end
$var parameter 32 6!   UVM_NOPACK $end
$var parameter 32 7!   UVM_PHYSICAL $end
$var parameter 32 8!   UVM_ABSTRACT $end
$var parameter 32 9!   UVM_READONLY $end
$var parameter 32 :!   UVM_NODEFPRINT $end
$var parameter 32 ;!   UVM_MACRO_EXTRAS $end
$var parameter 32 <!   UVM_FLAGS $end
$var parameter 32 =!   UVM_UNPACK $end
$var parameter 32 >!   UVM_CHECK_FIELDS $end
$var parameter 32 ?!   UVM_END_DATA_EXTRA $end
$var parameter 32 @!   UVM_START_FUNCS $end
$var parameter 32 A!   UVM_SET $end
$var parameter 32 B!   UVM_SETINT $end
$var parameter 32 C!   UVM_SETOBJ $end
$var parameter 32 D!   UVM_SETSTR $end
$var parameter 32 E!   UVM_END_FUNCS $end
$var integer  32 F!   uvm_global_random_seed $end
$var parameter 32 G!   UVM_STR_CRC_POLYNOMIAL $end
$var parameter 32 H!   UVM_STDOUT $end
$var parameter 32 I!   UVM_LINE_WIDTH $end
$var parameter 32 J!   UVM_NUM_LINES $end
$var parameter 32 K!   UVM_SMALL_STRING $end
$var parameter 32 L!   UVM_LARGE_STRING $end
$var integer  32 M!   UVM_UNBOUNDED_CONNECTIONS $end

$scope function uvm_hdl_check_path $end
$var integer  32 N!   uvm_hdl_check_path $end
$upscope $end


$scope function uvm_hdl_deposit $end
$var integer  32 O!   uvm_hdl_deposit $end
$var reg      1024 P!   value [1023:0] $end
$upscope $end


$scope function uvm_hdl_force $end
$var integer  32 Q!   uvm_hdl_force $end
$var reg      1024 R!   value [1023:0] $end
$upscope $end


$scope task uvm_hdl_force_time $end
$var reg      1024 S!   value [1023:0] $end
$var time     64 T!   force_time $end
$upscope $end


$scope function uvm_hdl_release_and_read $end
$var integer  32 U!   uvm_hdl_release_and_read $end
$var reg      1024 V!   value [1023:0] $end
$upscope $end


$scope function uvm_hdl_release $end
$var integer  32 W!   uvm_hdl_release $end
$upscope $end


$scope function uvm_hdl_read $end
$var integer  32 X!   uvm_hdl_read $end
$var reg      1024 Y!   value [1023:0] $end
$upscope $end


$scope function uvm_dpi_get_next_arg_c $end
$var integer  32 Z!   init $end
$upscope $end


$scope function uvm_dpi_get_next_arg $end
$var integer  32 [!   init $end
$upscope $end


$scope function uvm_dpi_regexec $end
$var integer  32 \!   uvm_dpi_regexec $end
$upscope $end


$scope function uvm_re_match $end
$var integer  32 ]!   uvm_re_match $end
$upscope $end


$scope function uvm_regcomp $end
$var reg      64 ^!   uvm_regcomp [63:0] $end
$upscope $end


$scope function uvm_regexec $end
$var integer  32 _!   uvm_regexec $end
$var reg      64 `!   re [63:0] $end
$var integer  32 a!   nmatch $end
$var reg      64 b!   ptr [63:0] $end
$var integer  32 c!   eflags $end
$upscope $end


$scope task uvm_regfree $end
$var reg      64 d!   re [63:0] $end
$upscope $end


$scope function uvm_radix_to_string $end
$var reg      32 e!   radix [31:0] $end
$upscope $end


$scope function uvm_instance_scope $end
$var reg       8 f!   c [7:0] $end
$var integer  32 g!   pos $end
$upscope $end


$scope function uvm_oneway_hash $end
$var integer  32 h!   uvm_oneway_hash $end
$var integer  32 i!   seed $end
$var reg       1 j!   msb $end
$var reg       8 k!   current_byte [7:0] $end
$var reg      32 l!   crc1 [31:0] $end
$upscope $end


$scope function uvm_create_random_seed $end
$var integer  32 m!   uvm_create_random_seed $end
$upscope $end


$scope function uvm_leaf_scope $end
$var reg       8 n!   scope_separator [7:0] $end
$var reg       8 o!   bracket_match [7:0] $end
$var integer  32 p!   pos $end
$var integer  32 q!   bmatches $end
$upscope $end


$scope function uvm_bitstream_to_string $end
$var reg      4096 r!   value [4095:0] $end
$var integer  32 s!   size $end
$var reg      32 t!   radix [31:0] $end

$scope begin unmblk1 $end
$var reg      4096 u!   _t [4095:0] $end
$upscope $end

$upscope $end


$scope function uvm_integral_to_string $end
$var reg      64 v!   value [63:0] $end
$var integer  32 w!   size $end
$var reg      32 x!   radix [31:0] $end

$scope begin unmblk1 $end
$var reg      64 y!   _t [63:0] $end
$upscope $end

$upscope $end


$scope function uvm_vector_to_string $end
$var reg      4096 z!   value [4095:0] $end
$var integer  32 {!   size $end
$var reg      32 |!   radix [31:0] $end
$upscope $end


$scope function uvm_get_array_index_int $end
$var integer  32 }!   uvm_get_array_index_int $end
$var reg       1 ~!   is_wildcard $end
$var integer  32 !"   i $end
$upscope $end


$scope function uvm_get_array_index_string $end
$var reg       1 ""   is_wildcard $end
$var integer  32 #"   i $end
$upscope $end


$scope function uvm_is_array $end
$var reg       1 $"   uvm_is_array $end
$upscope $end


$scope task set_global_timeout $end
$var time     64 %"   timeout $end
$var reg       1 &"   overridable $end
$upscope $end


$scope task set_global_stop_timeout $end
$var time     64 '"   timeout $end
$upscope $end


$scope function uvm_report_enabled $end
$var integer  32 ("   uvm_report_enabled $end
$var integer  32 )"   verbosity $end
$var reg       2 *"   severity [1:0] $end
$upscope $end


$scope task uvm_report $end
$var reg       2 +"   severity [1:0] $end
$var integer  32 ,"   verbosity $end
$var integer  32 -"   line $end
$var reg       1 ."   report_enabled_checked $end
$upscope $end


$scope task m__uvm_report_dpi $end
$var integer  32 /"   severity $end
$var integer  32 0"   verbosity $end
$var integer  32 1"   line $end
$upscope $end


$scope task uvm_report_info $end
$var integer  32 2"   verbosity $end
$var integer  32 3"   line $end
$var reg       1 4"   report_enabled_checked $end
$upscope $end


$scope task uvm_report_warning $end
$var integer  32 5"   verbosity $end
$var integer  32 6"   line $end
$var reg       1 7"   report_enabled_checked $end
$upscope $end


$scope task uvm_report_error $end
$var integer  32 8"   verbosity $end
$var integer  32 9"   line $end
$var reg       1 :"   report_enabled_checked $end
$upscope $end


$scope task uvm_report_fatal $end
$var integer  32 ;"   verbosity $end
$var integer  32 <"   line $end
$var reg       1 ="   report_enabled_checked $end
$upscope $end


$scope function uvm_string_to_severity $end
$var reg       1 >"   uvm_string_to_severity $end
$var reg       2 ?"   sev [1:0] $end
$upscope $end


$scope task set_config_int $end
$var reg      4096 @"   value [4095:0] $end
$upscope $end


$scope task set_config_object $end
$var reg       1 A"   clone $end
$upscope $end


$scope function uvm_is_match $end
$var reg       1 B"   uvm_is_match $end
$upscope $end


$scope task uvm_wait_for_nba_region $end
$var integer  32 C"   nba $end
$var integer  32 D"   next_nba $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b11100000111111111 L!
b1110111111 K!
b1111000 J!
b1111000 I!
b1 H!
b100110000010001110110110110 G!
b100000000000001000 E!
b100000000000001000 D!
b100000000000000111 C!
b100000000000000110 B!
b100000000000000110 A!
b100000000000000101 @!
b100000000000000100 ?!
b100000000000000011 >!
b100000000000000010 =!
b100000000000000001 <!
b100000000000000000 ;!
b10000000000000000 :!
b1000000000000000 9!
b100000000000000 8!
b10000000000000 7!
b1000000000 6!
b100000000 5!
b10000000 4!
b1000000 3!
b100000 2!
b10000 1!
b1000 0!
b100 /!
b10 .!
b1 -!
b0 ,!
b101010101 +!
b101010101 *!
b10101010101 )!
b10001 (!
b1111000000000000000000000000 '!
b1000000000000 &!
b101001000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000101000000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000100000 $!
b1100000000000000000000000000101000000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000100000000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011111 #!
b1100000000000000000000000000101000000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000100000000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011111000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011110 "!
b11111000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011110000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011101 !!
b1100000000000000000000000000011111000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011110000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011101000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011100 ~
b1100000000000000000000000000011110000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011101000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011100000000000000000000000000000001000000000000000000000000000000001100000000000000000000000000011011 }
b10000000000 |
b111 s
b110 r
b101 q
b100 p
b11 o
b10 n
b1 m
b0 l
b1100 E
b1000 $
0!
1"
0#
0%
1&
x'
bx (
bx )
bx *
bx +
bx ,
bx -
bx .
bx /
00
01
02
b111 3
r0.0078125 4
bx 5
bx 6
bx 7
bx 8
bx 9
bx :
bx ;
bx <
bx =
bx >
bx ?
bx @
bx A
bx B
bx C
bx D
0F
1G
xH
bx I
bx J
bx K
bx L
bx M
bx N
bx O
bx P
bx Q
bx R
bx S
bx T
bx U
bx V
bx W
bx X
bx Y
bx Z
bx [
bx \
bx ]
bx ^
bx _
bx `
bx a
bx b
bx c
bx d
bx e
bx f
bx g
bx h
0i
0j
0k
xt
1u
0v
xw
xx
0y
b0 z
b0 {
1%!
b101011011100011001010010100011 F!
b11111111111111111111111111111111 M!
b0 N!
b0 O!
bx P!
b0 Q!
bx R!
bx S!
bx T!
b0 U!
bx V!
b0 W!
b0 X!
bx Y!
b0 Z!
b0 [!
b0 \!
b0 ]!
b0 ^!
b0 _!
b0 `!
b0 a!
b0 b!
b0 c!
b0 d!
b0 e!
b111010 f!
b1000 g!
b111001011000001101100010110011 h!
b101011011100011001010010100011 i!
0j!
b1110001 k!
b11101111101110110001000011110010 l!
b11100011101010101001000000010000 m!
b101110 n!
b0 o!
b11111 p!
b11111111111111111111111111111111 q!
bx r!
b0 s!
b0 t!
bx u!
b1 v!
b100000 w!
b10000000000000000000000000 x!
bx y!
bx z!
b0 {!
b0 |!
b0 }!
0~!
b0 !"
0""
b0 #"
0$"
bx %"
0&"
bx '"
b0 ("
b111110100 )"
b0 *"
b0 +"
b0 ,"
b0 -"
0."
b0 /"
b0 0"
b0 1"
b0 2"
b0 3"
04"
b0 5"
b0 6"
07"
b0 8"
b0 9"
0:"
b0 ;"
b0 <"
0="
0>"
b0 ?"
bx @"
0A"
1B"
b100011 C"
b100011 D"
$end
#2
1!
1F
1%
#3
0"
0G
0&
0'
#4
0!
0F
0%
#6
1!
1F
1%
#8
1"
0!
0F
0%
1G
1&
b100100 D"
b100100 C"
b101010 5
b110 6
b11110011 7
b11010010 8
b10001010 9
b10011010 :
b110001 ;
b10010 <
#10
1!
1F
1%
#12
0!
0F
0%
11
b101010 (
b110 )
b11110011 *
b11010010 +
b10001010 ,
b10011010 -
b110001 .
b10010 /
1'
12
#14
1!
1F
1%
02
10
b101010 =
b110 >
b11110011 ?
b11010010 @
b10001010 A
b10011010 B
b110001 C
b10010 D
#16
0!
0F
0%
0'
01
b100101 D"
b111001011000001101100010110110 m!
b111001011000001101100010111001 m!
b100101 C"
b10110010 5
b11110011 6
b1001100 7
b11110010 8
b1011 9
b1111110 :
b11011101 ;
b1011101 <
#18
1!
1F
1%
00
#20
0!
0F
0%
11
b10110010 (
b11110011 )
b1001100 *
b11110010 +
b1011 ,
b1111110 -
b11011101 .
b1011101 /
1'
12
#22
1!
1F
1%
02
10
b10110010 =
b11110011 >
b1001100 ?
b11110010 @
b1011 A
b1111110 B
b11011101 C
b1011101 D
#24
0!
0F
0%
0'
01
b100110 D"
b111001011000001101100010111101 m!
b111001011000001101100011000010 m!
b100110 C"
b11101111 5
b10011010 6
b1001011 7
b11001000 8
b110110 9
b11111000 :
b10001011 ;
b11110010 <
#26
1!
1F
1%
00
#28
0!
0F
0%
11
b11101111 (
b10011010 )
b1001011 *
b11001000 +
b110110 ,
b11111000 -
b10001011 .
b11110010 /
1'
12
#30
1!
1F
1%
02
10
b11101111 =
b10011010 >
b1001011 ?
b11001000 @
b110110 A
b11111000 B
b10001011 C
b11110010 D
#32
0!
0F
0%
0'
01
b100111 D"
b100111 C"
#34
1!
1F
1%
00
#36
0!
0F
0%
#38
1!
1F
1%
#40
0!
0F
0%
#42
1!
1F
1%
#44
0!
0F
0%
#46
1!
1F
1%
#48
0!
0F
0%
#50
1!
1F
1%
#52
0!
0F
0%
#54
1!
1F
1%
#56
0!
0F
0%
#58
1!
1F
1%
#60
0!
0F
0%
#62
1!
1F
1%
#64
0!
0F
0%
#66
1!
1F
1%
#68
0!
0F
0%
#70
1!
1F
1%
#72
0!
0F
0%
#74
1!
1F
1%
#76
0!
0F
0%
#78
1!
1F
1%
#80
0!
0F
0%
#82
1!
1F
1%
#84
0!
0F
0%
#86
1!
1F
1%
#88
0!
0F
0%
#90
1!
1F
1%
#92
0!
0F
0%
#94
1!
1F
1%
#96
0!
0F
0%
#98
1!
1F
1%
#100
0!
0F
0%
#102
1!
1F
1%
#104
0!
0F
0%
#106
1!
1F
1%
#108
0!
0F
0%
#110
1!
1F
1%
#112
0!
0F
0%
#114
1!
1F
1%
#116
0!
0F
0%
#118
1!
1F
1%
#120
0!
0F
0%
#122
1!
1F
1%
#124
0!
0F
0%
#126
1!
1F
1%
#128
0!
0F
0%
#130
1!
1F
1%
#132
0!
0F
0%
#134
1!
1F
1%
#136
0!
0F
0%
#138
1!
1F
1%
#140
0!
0F
0%
#142
1!
1F
1%
#144
0!
0F
0%
#146
1!
1F
1%
#148
0!
0F
0%
#150
1!
1F
1%
#152
0!
0F
0%
#154
1!
1F
1%
#156
0!
0F
0%
#158
1!
1F
1%
#160
0!
0F
0%
#162
1!
1F
1%
#164
0!
0F
0%
#166
1!
1F
1%
#168
0!
0F
0%
#170
1!
1F
1%
#172
0!
0F
0%
#174
1!
1F
1%
#176
0!
0F
0%
#178
1!
1F
1%
#180
0!
0F
0%
#182
1!
1F
1%
#184
0!
0F
0%
#186
1!
1F
1%
#188
0!
0F
0%
#190
1!
1F
1%
#192
0!
0F
0%
#194
1!
1F
1%
#196
0!
0F
0%
#198
1!
1F
1%
#200
0!
0F
0%
#202
1!
1F
1%
#204
0!
0F
0%
#206
1!
1F
1%
#208
0!
0F
0%
#210
1!
1F
1%
#212
0!
0F
0%
#214
1!
1F
1%
#216
0!
0F
0%
#218
1!
1F
1%
#220
0!
0F
0%
#222
1!
1F
1%
#224
0!
0F
0%
#226
1!
1F
1%
#228
0!
0F
0%
#230
1!
1F
1%
#232
0!
b101000 D"
b101001 D"
0F
0%
b101001 C"
b101010 D"
b101011 D"
b101011 C"
0u
xw
xw
1u
xw
b11100011101010101001000000100001 m!
b1111000101011000010011001111101 m!
b1110100000111000010001001000111 m!
b1001010001101100001011001100011 m!
b1011001100101110111101000010 m!
b11100111010000010001111000110 m!
b11100100110101010101011110110010 m!
b11110101101101001000010000001101 m!
b110111010101101000010000101111 m!
b1100000011010101101000000001110 m!
b10100000100110011110000010110010 m!
b1110000100100111100110000101111 m!
b10101000110010111100001010110100 m!
b10100001001110010100001001011100 m!
b10101011100000011000001010010011 m!
b11010010110110011001010010111110 m!
b1111110101100100010011100001 m!
b10000101101001101000010011111111 m!
b11000110000110011001111101011100 m!
b10011111101001101101110001011001 m!
b11101001000110011100010010101011 m!
b11000011110111001010000001110001 m!
b1010010001010011100000001010000 m!
b11010110101101110011011111100011 m!
b10111101001101110001100011100111 m!
b10011101000001000110100101011 m!
b10101010110100010111100011010 m!
b1101110110001011010110100010001 m!
b11100011011100011010111110110001 m!
b111000000100100000001011010111 m!
b11100100000100110001101101001110 m!
0u
xw
1u
xw
b11100011101010101001000000110011 m!
b1111000101011000010011010001111 m!
b1110100000111000010001001011001 m!
b1001010001101100001011001110101 m!
b1011001100101110111101010100 m!
b11100111010000010001111011000 m!
b11100100110101010101011111000100 m!
b11110101101101001000010000011111 m!
b110111010101101000010001000001 m!
b1100000011010101101000000100000 m!
b10100000100110011110000011000100 m!
b1110000100100111100110001000001 m!
b10101000110010111100001011000110 m!
b10100001001110010100001001101110 m!
b10101011100000011000001010100101 m!
b11010010110110011001010011010000 m!
b1111110101100100010011110011 m!
b10000101101001101000010100010001 m!
b11000110000110011001111101101110 m!
b10011111101001101101110001101011 m!
b11101001000110011100010010111101 m!
b11000011110111001010000010000011 m!
b1010010001010011100000001100010 m!
b11010110101101110011011111110101 m!
b10111101001101110001100011111001 m!
b10011101000001000110100111101 m!
b10101010110100010111100101100 m!
b1101110110001011010110100100011 m!
b11100011011100011010111111000011 m!
b111000000100100000001011101001 m!
b0 q!
b1111 p!
b1110 p!
b1101 p!
b1100 p!
b1011 p!
b1010 p!
b1001 p!
b1000 p!
b111 p!
b110 p!
b101 p!
b100 p!
b11 p!
b10 p!
b1 p!
b0 p!
b1111 p!
b1110 p!
b1101 p!
b1100 p!
b1011 p!
b1010 p!
b1001 p!
b1000 p!
b111 p!
b110 p!
b101 p!
b100 p!
b11 p!
b10 p!
b1 p!
b0 p!
b0 )"
b1 ("
b1001001101 3"
14"
b11100100000100110001101101100000 m!
0u
xw
1u
xw
b11100011101010101001000001000110 m!
b1111000101011000010011010100010 m!
b1110100000111000010001001101100 m!
b1001010001101100001011010001000 m!
b1011001100101110111101100111 m!
b11100111010000010001111101011 m!
b11100100110101010101011111010111 m!
b11110101101101001000010000110010 m!
b110111010101101000010001010100 m!
b1100000011010101101000000110011 m!
b10100000100110011110000011010111 m!
b1110000100100111100110001010100 m!
b10101000110010111100001011011001 m!
b10100001001110010100001010000001 m!
b10101011100000011000001010111000 m!
b11010010110110011001010011100011 m!
b1111110101100100010100000110 m!
b10000101101001101000010100100100 m!
b11000110000110011001111110000001 m!
b10011111101001101101110001111110 m!
b11101001000110011100010011010000 m!
b11000011110111001010000010010110 m!
b1010010001010011100000001110101 m!
b11010110101101110011100000001000 m!
b10111101001101110001100100001100 m!
b10011101000001000110101010000 m!
b10101010110100010111100111111 m!
b1101110110001011010110100110110 m!
b11100011011100011010111111010110 m!
b111000000100100000001011111100 m!
b11100100000100110001101101110011 m!
0u
xw
1u
xw
b11100100000100110001101110000111 m!
b111000000100100000001100010000 m!
b1010010001010011100000010001001 m!
b1111000101011000010011010110110 m!
b11100011101010101001000001011010 m!
b1011001100101110111101111011 m!
b1110100000111000010001010000000 m!
b1001010001101100001011010011100 m!
b11100111010000010001111111111 m!
b11110101101101001000010001000110 m!
b11100100110101010101011111101011 m!
b11000011110111001010000010101010 m!
b10101000110010111100001011101101 m!
b110111010101101000010001101000 m!
b1100000011010101101000001000111 m!
b10100000100110011110000011101011 m!
b1110000100100111100110001101000 m!
b10100001001110010100001010010101 m!
b10101011100000011000001011001100 m!
b11101001000110011100010011100100 m!
b11010010110110011001010011110111 m!
b1111110101100100010100011010 m!
b10000101101001101000010100111000 m!
b11000110000110011001111110010101 m!
b10011111101001101101110010010010 m!
b11100011011100011010111111101010 m!
b10111101001101110001100100100000 m!
b11010110101101110011100000011100 m!
b10011101000001000110101100100 m!
b1101110110001011010110101001010 m!
b10101010110100010111101010011 m!
0u
xw
b1100100 )"
b1100100 2"
b1101001111 3"
